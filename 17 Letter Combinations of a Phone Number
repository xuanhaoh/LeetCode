class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> ans = new ArrayList<String>();
    	if (digits.equals(""))
    		return ans;
        char[][] ch = {{'a', 'b', 'c'}, {'d', 'e', 'f'}, {'g', 'h', 'i'}, {'j', 'k', 'l'}, {'m', 'n', 'o'}, {'p', 'q', 'r', 's'}, {'t', 'u', 'v'}, {'w', 'x', 'y', 'z'}};
        int[] a = new int[digits.length()];
        for (int i = 0; i < digits.length(); i++)
        	a[i] = 0;
        while (true) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < digits.length(); i++) {
            	sb.append(ch[digits.charAt(i) - '2'][a[i]]);
            }
            ans.add(sb.toString());
            boolean b = false;
            for (int i = digits.length() - 1; i >= 0; i--) {
        		if (a[i] < ch[digits.charAt(i) - '2'].length - 1) {
        			a[i]++;
        			b = true;
        			break;
        		}
        		else
        			a[i] = 0;
        	}
            if (b == false)
            	break;
        }
        return ans;
    }
}
