class Solution {
    public void nextPermutation(int[] nums) {
    	if (nums.length < 2)
    		return;
    	int start = -1, end = -1;
    	int temp;
        for (int i = nums.length - 1; i > 0; i--) {
        	if (nums[i - 1] < nums[i]) {
        		start = i - 1;
        		end = i;
        		for (int j = start + 1; j < nums.length; j++) {
                	if (nums[j] <= nums[end] && nums[j] > nums[start]) {
                		end = j;
                	}
                }
            	temp = nums[start];
            	nums[start] = nums[end];
            	nums[end] = temp;
            	for (int j = start + 1; j < start + 1 + (nums.length - start - 1) / 2; j++) {
                	temp = nums[j];
                	nums[j] = nums[nums.length - j + start];
                	nums[nums.length - j + start] = temp;
            	}
            	return;
        	}
        }
        for (int i = 0; i < nums.length / 2; i++) {
        	temp = nums[i];
        	nums[i] = nums[nums.length - 1 - i];
        	nums[nums.length - 1 - i] = temp;
        }
    }
}
